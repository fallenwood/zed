[build]
# v0 mangling scheme provides more detailed backtraces around closures
rustflags = ["-C", "symbol-mangling-version=v0", "--cfg", "tokio_unstable"]
rustc-wrapper = "sccache"

[target.x86_64-pc-windows-msvc]
rustflags = ["-C", "symbol-mangling-version=v0", "-C", "link-arg=-fuse-ld=rust-lld", "--cfg", "tokio_unstable"]

[target.x86_64-unknown-linux-gnu]
rustflags = ["-C", "symbol-mangling-version=v0", "-C", "link-arg=-fuse-ld=mold", "--cfg", "tokio_unstable", "-C", "split-debuginfo=packed"]

[alias]
xtask = "run --package xtask --"
perf-test = ["test", "--profile", "release-fast", "--lib", "--bins", "--tests", "--all-features", "--config", "target.'cfg(true)'.runner='cargo run -p perf --release'", "--config", "target.'cfg(true)'.rustflags=[\"--cfg\", \"perf_enabled\"]"]
# Keep similar flags here to share some ccache
perf-compare = ["run", "--profile", "release-fast", "-p", "perf", "--config", "target.'cfg(true)'.rustflags=[\"--cfg\", \"perf_enabled\"]", "--", "compare"]

[target.aarch64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-C", "link-arg=-fuse-ld=mold"]

# This cfg will reduce the size of `windows::core::Error` from 16 bytes to 4 bytes
[target.'cfg(target_os = "windows")']
rustflags = [
    "--cfg",
    "windows_slim_errors",        # This cfg will reduce the size of `windows::core::Error` from 16 bytes to 4 bytes
    "-C",
    "target-feature=+crt-static", # This fixes the linking issue when compiling livekit on Windows
]

[env]
MACOSX_DEPLOYMENT_TARGET = "10.15.7"
